#!/bin/bash

#version 0.4
#gpl v2.0 license
#author: Vineeth Raj <contact.twn@openmailbox.org>

LIST_FILE="list"
IMDB_ID_FILE=".imdb"

if [ "${1}" == "" ]; then
	if [ -e "$LIST_FILE" ]; then
		rm -r "$LIST_FILE"
		touch "$LIST_FILE"
	fi
fi

ERR_LIST_FILE="err.list"

if [ "${1}" == "" ]; then
	if [ -e "$ERR_LIST_FILE" ]; then
		rm -r "$ERR_LIST_FILE"
		touch "$ERR_LIST_FILE"
	fi
fi

re='^[0-9]+$'

ls  -d -- ${1}*/ | grep -v 'lost+found' | sed 's/\///g' | while read -r FOLDER
do
	#get resolution
	cd "$FOLDER"
	FILE_NAME=$( find . -type f -name "*.ogg" -o -name "*.avi" -o -name "*.flv" -o -name "*.mkv" -o -name "*.mp4" -o -name "*.m4v" | head -n 1)
	F_HEIGHT=$( exiftool -ImageHeight "${FILE_NAME}" | rev | cut -d ' ' -f1 | rev )
	F_MODIFY=$( stat -c %y "${FILE_NAME}" | cut -d' ' -f1 )

	cd ..

	if ! [[ $F_HEIGHT =~ $re ]] ; then
		M_RES="null"
	else
		if (($F_HEIGHT>=1 && $F_HEIGHT<=240))
		then
			M_RES="240p"
		elif (($F_HEIGHT>=241 && $F_HEIGHT<=369))
		then
			M_RES="360p"
		elif (($F_HEIGHT>=371 && $F_HEIGHT<=479))
		then
			M_RES="480p"
		elif (($F_HEIGHT>=480 && $F_HEIGHT<=760))
		then
			M_RES="720p"
		elif (($F_HEIGHT>=761 && $F_HEIGHT<=1200))
		then
			M_RES="1080p"
		fi
	fi

	M_SEARCH_NAME=$( echo ${FOLDER} | tr "_" " " )
	M_SEARCH_URL=$( echo "http://www.omdbapi.com/?t=${M_SEARCH_NAME}&r=json" )
	if [ -e "${FOLDER}/${IMDB_ID_FILE}" ]; then
		M_SEARCH_URL=$( echo "omdbapi.com/?i=$( cat "${FOLDER}/${IMDB_ID_FILE}" )&r=json" )
	fi
	if [ "${FORCE_REGEN}" == "1" ]; then
		if [ -e "${FOLDER}/info.json" ]; then
			rm -f "${FOLDER}/info.json";
		fi
		wget "${M_SEARCH_URL}" --quiet --no-verbose -O info.json;
	else
		if [ -e "${FOLDER}/info.json" ]; then
			cp "${FOLDER}/info.json" "info.json"
		else
			wget "${M_SEARCH_URL}" --quiet --no-verbose -O info.json;
		fi
	fi
	J_FILE_Title=$( jq '.Title' info.json | colorfix.sh | sed 's/\"//g' )
	J_FILE_imdbID=$( jq '.imdbID' info.json | colorfix.sh | sed 's/\"//g' )
	J_FILE_Year=$( jq '.Year' info.json | colorfix.sh | sed 's/\"//g' )
	J_FILE_Released=$( jq '.Released' info.json | colorfix.sh | sed 's/\"//g' )
	J_FILE_Rating=$( jq '.imdbRating' info.json | colorfix.sh | sed 's/\"//g' )
	J_FILE_Language=$( jq '.Language' info.json | colorfix.sh | sed 's/\"//g' )
	J_ENC_Notes=$( jq '.Notes' info.json | colorfix.sh | sed 's/\"//g' )

	ERR_FL=0;
	if [[ "${J_FILE_Title}" == "null" ]] ; then
		ERR_FL=1;
	elif [[ "${J_FILE_imdbID}" == "null" ]] ; then
		ERR_FL=1;
	elif [[ "${J_FILE_Year}" == "null" ]] ; then
		ERR_FL=1;
	elif [[ "${J_FILE_Released}" == "null" ]] ; then
		ERR_FL=1;
	elif [[ "${J_FILE_Released}" == "N/A" ]] ; then
		J_FILE_Released=${J_FILE_Year}
	elif [[ "${M_RES}" == "null" ]] ; then
		ERR_FL=1;
	elif [[ "${J_FILE_Rating}" == "null" ]] ; then
		ERR_FL=1;
	elif [[ "${J_FILE_Language}" == "null" ]] ; then
		ERR_FL=1;
	elif [[ "${J_FILE_Language}" == "N/A" ]] ; then
		J_FILE_Language="English"
	elif [[ "${F_MODIFY}" == "null" ]] ; then
		ERR_FL=1;
	fi

	RELEASE_STR_LEN=${#J_FILE_Released}
	if ((${RELEASE_STR_LEN}==10)); then
		RELEASE_STR_REV=$( echo ${J_FILE_Released} | rev )
		if [[ ${RELEASE_STR_REV:4:1} == " " ]]; then
			J_FILE_Released="0"${J_FILE_Released}
		fi
	fi

	if [[ $(echo "${J_FILE_Released}" | grep -E "^([0-9]{2})\s([a-zA-Z]{3})\s([0-9]{4})$") ]]; then
		J_FILE_Released=$( date -d "${J_FILE_Released}" +'%Y-%m-%d' );
	fi

	rm -f info.json #remove info.json!
	if ((${ERR_FL}==1)) ; then
		echo "something wrong with ${FOLDER}. Please fixup with an info.json!"
		echo ${FOLDER} >> ${ERR_LIST_FILE}
	else
		STR=${J_FILE_Title}\|${J_FILE_imdbID}\|${J_FILE_Released}\|${M_RES}\|${J_FILE_Rating}\|${J_FILE_Language}\|${F_MODIFY}
		if [[ "${J_ENC_Notes}" != "null" ]] ; then
			STR=${STR}\|${J_ENC_Notes}
		fi
		echo ${STR} | tee -a ${LIST_FILE}
		if [ ! -e "${FOLDER}/info.json" ] ; then
			touch "${FOLDER}/info.json"

			STR="{
\"Title\":\"${J_FILE_Title}\",
\"Year\":\"${J_FILE_Year}\",
\"imdbID\":\"${J_FILE_imdbID}\",
\"Released\":\"${J_FILE_Released}\",
\"imdbRating\":\"${J_FILE_Rating}\",
\"Language\":\"${J_FILE_Language}\"";

			if [[ "${J_ENC_Notes}" != "null" ]] ; then
				STR=${STR}",
\"Notes\":\"${J_ENC_Notes}\""
			fi
			STR=${STR}"
}";

			echo ${STR} > "${FOLDER}/info.json"
		fi
	fi
done
